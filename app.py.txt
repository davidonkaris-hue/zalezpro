import streamlit as st
import requests
import time

st.set_page_config(page_title="ZalezPro Signals", layout="wide")

# List of markets
markets = [
    "Volatility 75 Index",
    "Volatility 75 (1s) Index",
    "Volatility 100 Index",
    "Volatility 100 (1s) Index",
    "Volatility 25 Index",
    "Volatility 25 (1s) Index"
]

# Simulated API function (replace with your real data source)
def fetch_signal_data():
    # In actual use, fetch from Deriv API or your backend
    return [
        {
            "market": m,
            "direction": "Buy" if i % 2 == 0 else "Sell",
            "confidence": f"{80 + i*2}%",
            "short_term": "Bullish",
            "mid_term": "Neutral",
            "long_term": "Bearish",
            "tp1": "TP1: 1000",
            "tp2": "TP2: 1200",
            "tp3": "TP3: 1400",
            "support": "S: 950",
            "resistance": "R: 1500"
        } for i, m in enumerate(markets)
    ]

# Auto-refresh every 60 seconds
st.experimental_rerun_interval = 60

st.title("ðŸ“ˆ ZalezPro Deriv Signal Dashboard")

st.markdown("Signals auto-refresh every 1 minute. Platform is in Light Mode.")

# Display signals
signal_data = fetch_signal_data()

for signal in signal_data:
    with st.container():
        st.subheader(signal["market"])
        st.markdown(f"**Direction:** {signal['direction']}")
        st.markdown(f"**Confidence:** {signal['confidence']}")
        st.markdown(f"**Short Term:** {signal['short_term']}")
        st.markdown(f"**Mid Term:** {signal['mid_term']}")
        st.markdown(f"**Long Term:** {signal['long_term']}")
        st.markdown(f"{signal['tp1']} | {signal['tp2']} | {signal['tp3']}")
        st.markdown(f"Support: {signal['support']} | Resistance: {signal['resistance']}")
        st.markdown("---")
